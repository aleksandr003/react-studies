{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Desktop/GitHub/react-studies/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { nanoid } from 'nanoid';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [name, setName] = useState('prod');\nfunction App() {\n  _s();\n  const [name, setName] = useState('prod');\n  const [user, setUser] = useState('Linda');\n  const [surn, setSurn] = useState('Avaty');\n  const [age, setAge] = useState('29');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"L1PgXVBocW0znsZY6BvyO+bXh88=\");\n_c = App;\nexport default App;\n\n// //halp functions:\n\nfunction id() {\n  return nanoid();\n}\n\n// function getDigitsSum(num){\n//   let sum = 0;\n//   const arr = String(num).split('');\n//   arr.forEach(element => {\n//     sum += Number(element);\n//   });\n//   return sum;\n// }\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["nanoid","React","useState","jsxDEV","_jsxDEV","name","setName","App","_s","user","setUser","surn","setSurn","age","setAge","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","id","$RefreshReg$"],"sources":["/Users/alex/Desktop/GitHub/react-studies/my-app/src/App.js"],"sourcesContent":["import { nanoid } from 'nanoid'\nimport React, { useState } from 'react';\n\nconst [name, setName] = useState('prod');\nfunction App() {\n\tconst [name, setName] = useState('prod');\n  const [user, setUser] = useState('Linda');\n  const [surn, setSurn] = useState('Avaty');\n  const [age, setAge] = useState('29');\n\t\n\treturn <div>\n\t\t<span>{name}</span>\n\t</div>;\n}\n\n\nexport default App;\n\n// //halp functions:\n\nfunction id() {\n\treturn nanoid();\n}\n\n// function getDigitsSum(num){\n//   let sum = 0;\n//   const arr = String(num).split('');\n//   arr.forEach(element => {\n//     sum += Number(element);\n//   });\n//   return sum;\n// }"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,MAAM,CAAC;AACxC,SAASK,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACH,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,MAAM,CAAC;EACvC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACW,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAErC,oBAAOE,OAAA;IAAAW,QAAA,eACNX,OAAA;MAAAW,QAAA,EAAOV;IAAI;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AACP;AAACX,EAAA,CATQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAYZ,eAAeA,GAAG;;AAElB;;AAEA,SAASc,EAAEA,CAAA,EAAG;EACb,OAAOrB,MAAM,CAAC,CAAC;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAoB,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}